#!/usr/bin/env python3
import os
import sys
import math
import csv
from math import *

def openfile():
    if (len(sys.argv) != 2):
        sys.exit(84)
    if not os.path.exists(sys.argv[1]):
        sys.exit(84)
    with open(sys.argv[1]) as file:
        header = csv.reader(file)
        data_list = [i[0].split(";") for i in header]
    if (len(data_list) == 0):
        sys.exit(84)
    for i in range(len(data_list)):
        if (len(data_list[i]) != 2):
            sys.exit(84)
        for j in range(len(data_list[i])):
            try:
                data_list[i][j] = (float)(data_list[i][j])
            except:
                sys.exit(84)
            if (data_list[i][j] < 0):
                sys.exit(84)
    return data_list

def find_max(data_list):
    data_max = 0
    ph = 0
    index = 0
    for i in range(len(data_list)):
        if (data_list[i][1] > ph):
            data_max = data_list[i][0]
            index = i
            ph = data_list[i][1]
    return data_max, index

def derivation(data_list):
    new_data = [[0 for i in range(len(data_list[j]))]for j in range(len(data_list))]
    for i in range(1, len(data_list) - 1):
        a1 = data_list[i][0] - data_list[i - 1][0]
        a2 = data_list[i + 1][0] - data_list[i][0]
        y1 = (data_list[i + 1][1] - data_list[i][1]) / a2
        y2 = (data_list[i][1] - data_list[i - 1][1]) / a1
        new_data[i][1] = (a1 * y1 + a2 * y2) / (a1 + a2)
        new_data[i][0] = data_list[i][0]
    new_data.pop(0)
    new_data.pop(-1)        
    return new_data

def inter_linéaire(new_data, index_max):
    x1, y1 = new_data[index_max - 2]
    x2, y2 = new_data[index_max - 1]
    count = 0
    neg = 0
    beforeneg = 0
    while count <= x2 - x1:
        interpolated_x = x1 + count
        interpolated_y = y1 + (y2 - y1) * ((interpolated_x - x1) / (x2 - x1))
        print(f"{interpolated_x:.1f} ml -> {interpolated_y:.2f}")
        if (interpolated_y <= 0 and neg == 0):
            beforeneg = interpolated_x
            neg = 1
        count = count + 0.1
        if (interpolated_x == new_data[index_max - 1][0]):
            x1, y1 = new_data[index_max - 1]
            x2, y2 = new_data[index_max]
            count = 0.1
    print(f"\nEquivalence point at {beforeneg} ml")

def main():
    data_list = openfile()
    new_data = derivation(data_list)
    print("Derivative:")
    for i in range(len(new_data)):
        print(f"{new_data[i][0]:.1f} ml -> {new_data[i][1]:.2f}")
    data_max, index_max = find_max(new_data)
    print(f"\nEquivalence point at {data_max} ml\n")
    print("Second derivative:")
    new_data = derivation(new_data)
    for i in range(len(new_data)):
        print(f"{new_data[i][0]:.1f} ml -> {new_data[i][1]:.2f}")
    print(f"\nSecond derivative estimated:")
    inter_linéaire(new_data, index_max)
main()
