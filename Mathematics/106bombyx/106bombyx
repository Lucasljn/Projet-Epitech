#!/usr/bin/env python3
import sys
import math
import csv
from math import *

def error():
    if (len(sys.argv) == 2 and sys.argv[1] == "-h"):
        print(f"USAGE\n\t./106bombyx n [k | i0 i1]\n")
        print(f"DESCRIPTION\n\tn\tnumber of first generation individuals")
        print(f"\tk\tgrowth rate from 1 to 4\n\ti0\tinitial generation (included)")
        print(f"\ti1\tfinal generation (included)")
        sys.exit(0)
    for i in range(1, len(sys.argv)):
        for j in range(len(sys.argv[i])):
            if (sys.argv[i][j] != '.' and (sys.argv[i][j] < '0' or sys.argv[i][j] > '9')):
                sys.exit(84)
    if (len(sys.argv) != 3 and len(sys.argv) != 4 or (float)(sys.argv[1]) < 0):
        sys.exit(84)

def is_int(n):
    try:
        int(n)
        return 0
    except ValueError:
        return 1

def withk(n, k):
    print(f"1 {n:.2f}")
    for i in range(2, 101):
        n = k * n * ((1000 - n) / 1000)
        if n < 0:
            n = 0
        print(f"{i} {n:.2f}")

def withoutk(n, i0, i1):
    k = 1.00
    while k <= 4.00:
        n1 = n
        for j in range(i0 - 1):
            n = k * n * ((1000 - n) / 1000)
            if n < 0:
                n = 0
        for i in range(i0 - 1, i1):
            print(f"{k:.2f} {n:.2f}")
            n = k * n * ((1000 - n) / 1000)
            if n < 0:
                n = 0
        n = n1
        k += 0.01

def main():
    error()
    if len(sys.argv) == 3:
        if (float)(sys.argv[2]) < 1 or (float)(sys.argv[2]) > 4:
            sys.exit(84)
        withk((int)(sys.argv[1]), (float)(sys.argv[2]))
        return 0
    elif len(sys.argv) == 4:
        if (is_int(sys.argv[2]) == 1 or is_int(sys.argv[3]) == 1):
            sys.exit(84)
        if (int)(sys.argv[2]) > (int)(sys.argv[3]):
            sys.exit(84)
        withoutk((int)(sys.argv[1]), (int)(sys.argv[2]), (int)(sys.argv[3]))
        return 0
    else:
        return 84
main()
